---
# Setup system environment

#- name: Add cloudgene user
#  user: name=cloudgene shell=/bin/bash

- name: Set vm.swappiness to 0
  command: /sbin/sysctl vm.swappiness=0

#- name: Allow galaxy user to run docker
#  lineinfile: "dest=/etc/sudoers line='{{ galaxy_user_name }}  ALL = (root) NOPASSWD: SETENV: /usr/bin/docker'"

#- name: Setup system-wide vimrc
#  copy: src=vimrc dest=/etc/vim/vimrc

- name: Setup /etc/bash.bashrc
  lineinfile: dest=/etc/bash.bashrc line="{{ item }}"
  with_items:
    - "alias 'lt=ls -ltr'"
    - "alias 'll=ls -l'"
    - "export PATH={{ galaxyFS_base_dir }}/tools/bin:{{ postgresql_bin_dir }}:$PATH"  #"

- name: Create a symlink placeholder to the Galaxy app dir
  shell: "ln -s {{ galaxy_server_dir }} ~/galaxy-app"
  sudo_user: "{{ item }}"
  ignore_errors: yes
  with_items:
    - "{{ default_user }}"
    - "{{ galaxy_user_name }}"

- name: Create a symlink placeholder to the Galaxy indices dir
  shell: "ln -s {{ indicesFS_base_dir }} ~/galaxy-indices"
  sudo_user: "{{ item }}"
  ignore_errors: yes
  with_items:
    - "{{ default_user }}"
    - "{{ galaxy_user_name }}"

- name: Create a symlink placeholder to the Galaxy tools dir
  shell: "ln -s {{ galaxyFS_base_dir }}/tools ~/galaxy-tools"
  sudo_user: "{{ item }}"
  ignore_errors: yes
  with_items:
    - "{{ default_user }}"
    - "{{ galaxy_user_name }}"

#- name: Disable all default MOTD
#  shell: chmod -x /etc/update-motd.d/*

#- name: Disable specific MOTD notices
#  shell: path={{ item }} mode=0644 state=touch
#  with_items:
#    - /etc/update-motd.d/90-updates-available
#    - /etc/update-motd.d/98-fsck-at-reboot

#- name: Add custom login splash MOTD
#  copy: src=motd/00-header dest=/etc/update-motd.d/00-header mode=0755

#- name: Enable reboot notice MOTD
#  file: path=/etc/update-motd.d/98-reboot-required mode=0755 state=touch

#- name: Enable motd
#  lineinfile: dest=/etc/ssh/sshd_config regexp='^PrintMotd\ no' line='PrintMotd yes'

#- name: Disable last login ssh message
#  lineinfile: dest=/etc/ssh/sshd_config regexp='^PrintLastLog\ yes' line='PrintLastLog no'

#- name: Create IPython config dir
#  shell: mkdir -p ~/.ipython/profile_default
#  sudo_user: "{{ item }}"
#  with_items:
#    - "{{ default_user }}"
#    - "{{ galaxy_user_name }}"

#- name: Setup IPython env
#  copy: src=ipython_config.py dest="/home/{{ item }}/.ipython/profile_default/ipython_config.py" mode=0644 owner="{{ item }}"
#  with_items:
#    - "{{ default_user }}"
#    - "{{ galaxy_user_name }}"

- name: Download CloudMan's requirements.txt
  get_url: url={{ cm_source_repo }}/requirements.txt dest=/tmp/requirements.txt

- name: Create a virtualenv for CloudMan
  pip: requirements=/tmp/requirements.txt virtualenv={{ cm_venv_path }} state=latest

- name: Configure logrotate
  copy: src=cloudman.logrotate dest=/etc/logrotate.d/cloudman

- name: Copy CloudMan's cm_autorun
  copy: src=cm_autorun.py dest=/usr/bin/ mode=0744

- name: Configure cm_autorun as an upstart job
  copy: src=cloudman.conf dest=/etc/init/cloudman.conf

#- name: Disable ipv6
#  lineinfile: dest=/etc/sysctl.conf line="{{ item }}"
#  with_items:
#    - "net.ipv6.conf.all.disable_ipv6 = 1"
#    - "net.ipv6.conf.default.disable_ipv6 = 1"
#    - "net.ipv6.conf.lo.disable_ipv6 = 1"

#- name: Copy the firewall rules
#  copy: src=iptables.firewall.rules dest=/etc/iptables.firewall.rules

#- name: Apply firewall rules
#  shell: iptables-restore < /etc/iptables.firewall.rules
#  sudo_user: root

#- name: Autostart firewall on startup
#  copy: src=startup_firewall.sh dest=/etc/network/if-pre-up.d/firewall mode="u+x"

- name: Set max number of open files for galaxy system user
  lineinfile: dest=/etc/security/limits.conf line="{{ item }}"
  with_items:
    - "galaxy hard nofile 16384"
    - "galaxy soft nofile 16384"
  sudo_user: root

#- name: Symlink trackster required binaries to /usr/bin since trackster specifically looks for them there
#  file: src={{ galaxyFS_base_dir }}/tools/bin/{{ item }} dest=/usr/bin/{{ item }} state=link force=yes
#  with_items:
#    - wigToBigWig
#    - bedGraphToBigWig
#    - faToTwoBit
#  sudo: yes
#  sudo_user: root